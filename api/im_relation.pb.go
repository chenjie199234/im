// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: api/im_relation.proto

//this is the app's name,all proto in this app must use this name as the proto package name

package api

import (
	_ "github.com/chenjie199234/Corelib/pbex"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MakeFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MakeFriendReq) Reset() {
	*x = MakeFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeFriendReq) ProtoMessage() {}

func (x *MakeFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeFriendReq.ProtoReflect.Descriptor instead.
func (*MakeFriendReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{0}
}

func (x *MakeFriendReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MakeFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MakeFriendResp) Reset() {
	*x = MakeFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeFriendResp) ProtoMessage() {}

func (x *MakeFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeFriendResp.ProtoReflect.Descriptor instead.
func (*MakeFriendResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{1}
}

type AcceptMakeFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AcceptMakeFriendReq) Reset() {
	*x = AcceptMakeFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMakeFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMakeFriendReq) ProtoMessage() {}

func (x *AcceptMakeFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMakeFriendReq.ProtoReflect.Descriptor instead.
func (*AcceptMakeFriendReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptMakeFriendReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AcceptMakeFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptMakeFriendResp) Reset() {
	*x = AcceptMakeFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMakeFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMakeFriendResp) ProtoMessage() {}

func (x *AcceptMakeFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMakeFriendResp.ProtoReflect.Descriptor instead.
func (*AcceptMakeFriendResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{3}
}

type RefuseMakeFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RefuseMakeFriendReq) Reset() {
	*x = RefuseMakeFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseMakeFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseMakeFriendReq) ProtoMessage() {}

func (x *RefuseMakeFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseMakeFriendReq.ProtoReflect.Descriptor instead.
func (*RefuseMakeFriendReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{4}
}

func (x *RefuseMakeFriendReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RefuseMakeFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefuseMakeFriendResp) Reset() {
	*x = RefuseMakeFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseMakeFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseMakeFriendResp) ProtoMessage() {}

func (x *RefuseMakeFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseMakeFriendResp.ProtoReflect.Descriptor instead.
func (*RefuseMakeFriendResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{5}
}

type GroupInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GroupInviteReq) Reset() {
	*x = GroupInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInviteReq) ProtoMessage() {}

func (x *GroupInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInviteReq.ProtoReflect.Descriptor instead.
func (*GroupInviteReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{6}
}

func (x *GroupInviteReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupInviteReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GroupInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupInviteResp) Reset() {
	*x = GroupInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInviteResp) ProtoMessage() {}

func (x *GroupInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInviteResp.ProtoReflect.Descriptor instead.
func (*GroupInviteResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{7}
}

type AcceptGroupInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *AcceptGroupInviteReq) Reset() {
	*x = AcceptGroupInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptGroupInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptGroupInviteReq) ProtoMessage() {}

func (x *AcceptGroupInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptGroupInviteReq.ProtoReflect.Descriptor instead.
func (*AcceptGroupInviteReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{8}
}

func (x *AcceptGroupInviteReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AcceptGroupInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptGroupInviteResp) Reset() {
	*x = AcceptGroupInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptGroupInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptGroupInviteResp) ProtoMessage() {}

func (x *AcceptGroupInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptGroupInviteResp.ProtoReflect.Descriptor instead.
func (*AcceptGroupInviteResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{9}
}

type RefuseGroupInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *RefuseGroupInviteReq) Reset() {
	*x = RefuseGroupInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseGroupInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseGroupInviteReq) ProtoMessage() {}

func (x *RefuseGroupInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseGroupInviteReq.ProtoReflect.Descriptor instead.
func (*RefuseGroupInviteReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{10}
}

func (x *RefuseGroupInviteReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type RefuseGroupInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefuseGroupInviteResp) Reset() {
	*x = RefuseGroupInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseGroupInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseGroupInviteResp) ProtoMessage() {}

func (x *RefuseGroupInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseGroupInviteResp.ProtoReflect.Descriptor instead.
func (*RefuseGroupInviteResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{11}
}

type GroupApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GroupApplyReq) Reset() {
	*x = GroupApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplyReq) ProtoMessage() {}

func (x *GroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplyReq.ProtoReflect.Descriptor instead.
func (*GroupApplyReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{12}
}

func (x *GroupApplyReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GroupApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupApplyResp) Reset() {
	*x = GroupApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplyResp) ProtoMessage() {}

func (x *GroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplyResp.ProtoReflect.Descriptor instead.
func (*GroupApplyResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{13}
}

type AcceptGroupApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AcceptGroupApplyReq) Reset() {
	*x = AcceptGroupApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptGroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptGroupApplyReq) ProtoMessage() {}

func (x *AcceptGroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptGroupApplyReq.ProtoReflect.Descriptor instead.
func (*AcceptGroupApplyReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{14}
}

func (x *AcceptGroupApplyReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AcceptGroupApplyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AcceptGroupApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptGroupApplyResp) Reset() {
	*x = AcceptGroupApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptGroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptGroupApplyResp) ProtoMessage() {}

func (x *AcceptGroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptGroupApplyResp.ProtoReflect.Descriptor instead.
func (*AcceptGroupApplyResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{15}
}

type RefuseGroupApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RefuseGroupApplyReq) Reset() {
	*x = RefuseGroupApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseGroupApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseGroupApplyReq) ProtoMessage() {}

func (x *RefuseGroupApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseGroupApplyReq.ProtoReflect.Descriptor instead.
func (*RefuseGroupApplyReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{16}
}

func (x *RefuseGroupApplyReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RefuseGroupApplyReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RefuseGroupApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefuseGroupApplyResp) Reset() {
	*x = RefuseGroupApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseGroupApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseGroupApplyResp) ProtoMessage() {}

func (x *RefuseGroupApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseGroupApplyResp.ProtoReflect.Descriptor instead.
func (*RefuseGroupApplyResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{17}
}

type DelFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DelFriendReq) Reset() {
	*x = DelFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFriendReq) ProtoMessage() {}

func (x *DelFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFriendReq.ProtoReflect.Descriptor instead.
func (*DelFriendReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{18}
}

func (x *DelFriendReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DelFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelFriendResp) Reset() {
	*x = DelFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFriendResp) ProtoMessage() {}

func (x *DelFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFriendResp.ProtoReflect.Descriptor instead.
func (*DelFriendResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{19}
}

type LeaveGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *LeaveGroupReq) Reset() {
	*x = LeaveGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupReq) ProtoMessage() {}

func (x *LeaveGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupReq.ProtoReflect.Descriptor instead.
func (*LeaveGroupReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{20}
}

func (x *LeaveGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type LeaveGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveGroupResp) Reset() {
	*x = LeaveGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGroupResp) ProtoMessage() {}

func (x *LeaveGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGroupResp.ProtoReflect.Descriptor instead.
func (*LeaveGroupResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{21}
}

type KickGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *KickGroupReq) Reset() {
	*x = KickGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupReq) ProtoMessage() {}

func (x *KickGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupReq.ProtoReflect.Descriptor instead.
func (*KickGroupReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{22}
}

func (x *KickGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *KickGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type KickGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickGroupResp) Reset() {
	*x = KickGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupResp) ProtoMessage() {}

func (x *KickGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupResp.ProtoReflect.Descriptor instead.
func (*KickGroupResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{23}
}

type RelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"` //user or group
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Duty       uint32 `protobuf:"varint,4,opt,name=duty,proto3" json:"duty,omitempty"` //only when the group's member use this field,0-normal,1-system owner,2-owner,3-admin
}

func (x *RelationInfo) Reset() {
	*x = RelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationInfo) ProtoMessage() {}

func (x *RelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationInfo.ProtoReflect.Descriptor instead.
func (*RelationInfo) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{24}
}

func (x *RelationInfo) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RelationInfo) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *RelationInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RelationInfo) GetDuty() uint32 {
	if x != nil {
		return x.Duty
	}
	return 0
}

type RelationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hex(sha256(join(sort(["user_"+userid1+"_"+name,"group_"+groupid1+"_"+name,"user_"+userid2+"_"+name]),",")))
	CurrentHash string `protobuf:"bytes,1,opt,name=current_hash,json=currentHash,proto3" json:"current_hash,omitempty"`
}

func (x *RelationsReq) Reset() {
	*x = RelationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsReq) ProtoMessage() {}

func (x *RelationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsReq.ProtoReflect.Descriptor instead.
func (*RelationsReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{25}
}

func (x *RelationsReq) GetCurrentHash() string {
	if x != nil {
		return x.CurrentHash
	}
	return ""
}

type RelationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Update    bool            `protobuf:"varint,1,opt,name=update,proto3" json:"update,omitempty"`      //if the current_hash is same,this field is false
	Relations []*RelationInfo `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"` //if the current_hash is same,this field is empty
}

func (x *RelationsResp) Reset() {
	*x = RelationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationsResp) ProtoMessage() {}

func (x *RelationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationsResp.ProtoReflect.Descriptor instead.
func (*RelationsResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{26}
}

func (x *RelationsResp) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

func (x *RelationsResp) GetRelations() []*RelationInfo {
	if x != nil {
		return x.Relations
	}
	return nil
}

type GroupMembersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hex(sha256(join(sort([userid1+"_"+duty+"_"+name,userid2+"_"+duty+"_"+name]),",")))
	CurrentHash string `protobuf:"bytes,1,opt,name=current_hash,json=currentHash,proto3" json:"current_hash,omitempty"`
	GroupId     string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GroupMembersReq) Reset() {
	*x = GroupMembersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMembersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMembersReq) ProtoMessage() {}

func (x *GroupMembersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMembersReq.ProtoReflect.Descriptor instead.
func (*GroupMembersReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{27}
}

func (x *GroupMembersReq) GetCurrentHash() string {
	if x != nil {
		return x.CurrentHash
	}
	return ""
}

func (x *GroupMembersReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GroupMembersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Update  bool            `protobuf:"varint,1,opt,name=update,proto3" json:"update,omitempty"`  //if the current_hash is same,this field is false
	Members []*RelationInfo `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"` //if the current_hash is same,this field is empty
}

func (x *GroupMembersResp) Reset() {
	*x = GroupMembersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMembersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMembersResp) ProtoMessage() {}

func (x *GroupMembersResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMembersResp.ProtoReflect.Descriptor instead.
func (*GroupMembersResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{28}
}

func (x *GroupMembersResp) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

func (x *GroupMembersResp) GetMembers() []*RelationInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

type UpdateUserRelationNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	NewName    string `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *UpdateUserRelationNameReq) Reset() {
	*x = UpdateUserRelationNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRelationNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRelationNameReq) ProtoMessage() {}

func (x *UpdateUserRelationNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRelationNameReq.ProtoReflect.Descriptor instead.
func (*UpdateUserRelationNameReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateUserRelationNameReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *UpdateUserRelationNameReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *UpdateUserRelationNameReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type UpdateUserRelationNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserRelationNameResp) Reset() {
	*x = UpdateUserRelationNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRelationNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRelationNameResp) ProtoMessage() {}

func (x *UpdateUserRelationNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRelationNameResp.ProtoReflect.Descriptor instead.
func (*UpdateUserRelationNameResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{30}
}

type UpdateNameInGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	NewName string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
}

func (x *UpdateNameInGroupReq) Reset() {
	*x = UpdateNameInGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameInGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameInGroupReq) ProtoMessage() {}

func (x *UpdateNameInGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameInGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateNameInGroupReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateNameInGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateNameInGroupReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type UpdateNameInGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNameInGroupResp) Reset() {
	*x = UpdateNameInGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameInGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameInGroupResp) ProtoMessage() {}

func (x *UpdateNameInGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameInGroupResp.ProtoReflect.Descriptor instead.
func (*UpdateNameInGroupResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{32}
}

type UpdateDutyInGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	NewDuty uint32 `protobuf:"varint,3,opt,name=new_duty,json=newDuty,proto3" json:"new_duty,omitempty"`
}

func (x *UpdateDutyInGroupReq) Reset() {
	*x = UpdateDutyInGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDutyInGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDutyInGroupReq) ProtoMessage() {}

func (x *UpdateDutyInGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDutyInGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateDutyInGroupReq) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateDutyInGroupReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateDutyInGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateDutyInGroupReq) GetNewDuty() uint32 {
	if x != nil {
		return x.NewDuty
	}
	return 0
}

type UpdateDutyInGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDutyInGroupResp) Reset() {
	*x = UpdateDutyInGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_im_relation_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDutyInGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDutyInGroupResp) ProtoMessage() {}

func (x *UpdateDutyInGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_im_relation_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDutyInGroupResp.ProtoReflect.Descriptor instead.
func (*UpdateDutyInGroupResp) Descriptor() ([]byte, []int) {
	return file_api_im_relation_proto_rawDescGZIP(), []int{34}
}

var File_api_im_relation_proto protoreflect.FileDescriptor

var file_api_im_relation_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6d, 0x1a, 0x0f, 0x70, 0x62, 0x65,
	0x78, 0x2f, 0x70, 0x62, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0f,
	0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x12,
	0x0a, 0x10, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x37, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x6b,
	0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0,
	0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x10, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x3a, 0x0a, 0x17, 0x72,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x75, 0x73,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x58, 0x0a, 0x16, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x58, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90,
	0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90,
	0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x0f, 0x6c, 0x65, 0x61,
	0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x12, 0x0a,
	0x10, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x50, 0x0a, 0x0e, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x70, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x64, 0x75, 0x74, 0x79, 0x22, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe0, 0x90, 0x4e, 0x40, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x59, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5d, 0x0a,
	0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x40, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0,
	0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x12,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xd2, 0x90,
	0x4e, 0x04, 0x75, 0x73, 0x65, 0x72, 0xd2, 0x90, 0x4e, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0,
	0x90, 0x4e, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x5c,
	0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90,
	0x4e, 0x18, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0,
	0x90, 0x4e, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x7f, 0x0a, 0x18, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe0, 0x90, 0x4e, 0x18, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x75, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x90, 0x91, 0x4e, 0x00, 0x90, 0x91, 0x4e,
	0x03, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x44, 0x75, 0x74, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x32, 0x88, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x6d, 0x61,
	0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11,
	0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x60, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x6b, 0x65,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x60, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x61,
	0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x72,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x73,
	0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4e, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x69, 0x6d,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x63, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x69,
	0x6d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x63, 0x0a, 0x13, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f,
	0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x4b, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x13,
	0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x60, 0x0a, 0x12,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x69, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x60,
	0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a,
	0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x48, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x12,
	0x2e, 0x69, 0x6d, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x69, 0x6d, 0x2e, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f,
	0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x6b,
	0x69, 0x63, 0x6b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11,
	0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x45, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11,
	0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92,
	0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x69, 0x6d, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x75, 0x0a, 0x19, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x66, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x69, 0x6d, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x66, 0x0a, 0x14, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1c, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x75, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x75, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x68, 0x65, 0x6e, 0x6a, 0x69, 0x65, 0x31, 0x39, 0x39, 0x32, 0x33, 0x34, 0x2f, 0x69,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_im_relation_proto_rawDescOnce sync.Once
	file_api_im_relation_proto_rawDescData = file_api_im_relation_proto_rawDesc
)

func file_api_im_relation_proto_rawDescGZIP() []byte {
	file_api_im_relation_proto_rawDescOnce.Do(func() {
		file_api_im_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_im_relation_proto_rawDescData)
	})
	return file_api_im_relation_proto_rawDescData
}

var file_api_im_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_api_im_relation_proto_goTypes = []interface{}{
	(*MakeFriendReq)(nil),              // 0: im.make_friend_req
	(*MakeFriendResp)(nil),             // 1: im.make_friend_resp
	(*AcceptMakeFriendReq)(nil),        // 2: im.accept_make_friend_req
	(*AcceptMakeFriendResp)(nil),       // 3: im.accept_make_friend_resp
	(*RefuseMakeFriendReq)(nil),        // 4: im.refuse_make_friend_req
	(*RefuseMakeFriendResp)(nil),       // 5: im.refuse_make_friend_resp
	(*GroupInviteReq)(nil),             // 6: im.group_invite_req
	(*GroupInviteResp)(nil),            // 7: im.group_invite_resp
	(*AcceptGroupInviteReq)(nil),       // 8: im.accept_group_invite_req
	(*AcceptGroupInviteResp)(nil),      // 9: im.accept_group_invite_resp
	(*RefuseGroupInviteReq)(nil),       // 10: im.refuse_group_invite_req
	(*RefuseGroupInviteResp)(nil),      // 11: im.refuse_group_invite_resp
	(*GroupApplyReq)(nil),              // 12: im.group_apply_req
	(*GroupApplyResp)(nil),             // 13: im.group_apply_resp
	(*AcceptGroupApplyReq)(nil),        // 14: im.accept_group_apply_req
	(*AcceptGroupApplyResp)(nil),       // 15: im.accept_group_apply_resp
	(*RefuseGroupApplyReq)(nil),        // 16: im.refuse_group_apply_req
	(*RefuseGroupApplyResp)(nil),       // 17: im.refuse_group_apply_resp
	(*DelFriendReq)(nil),               // 18: im.del_friend_req
	(*DelFriendResp)(nil),              // 19: im.del_friend_resp
	(*LeaveGroupReq)(nil),              // 20: im.leave_group_req
	(*LeaveGroupResp)(nil),             // 21: im.leave_group_resp
	(*KickGroupReq)(nil),               // 22: im.kick_group_req
	(*KickGroupResp)(nil),              // 23: im.kick_group_resp
	(*RelationInfo)(nil),               // 24: im.relation_info
	(*RelationsReq)(nil),               // 25: im.relations_req
	(*RelationsResp)(nil),              // 26: im.relations_resp
	(*GroupMembersReq)(nil),            // 27: im.group_members_req
	(*GroupMembersResp)(nil),           // 28: im.group_members_resp
	(*UpdateUserRelationNameReq)(nil),  // 29: im.update_user_relation_name_req
	(*UpdateUserRelationNameResp)(nil), // 30: im.update_user_relation_name_resp
	(*UpdateNameInGroupReq)(nil),       // 31: im.update_name_in_group_req
	(*UpdateNameInGroupResp)(nil),      // 32: im.update_name_in_group_resp
	(*UpdateDutyInGroupReq)(nil),       // 33: im.update_duty_in_group_req
	(*UpdateDutyInGroupResp)(nil),      // 34: im.update_duty_in_group_resp
}
var file_api_im_relation_proto_depIdxs = []int32{
	24, // 0: im.relations_resp.relations:type_name -> im.relation_info
	24, // 1: im.group_members_resp.members:type_name -> im.relation_info
	0,  // 2: im.relation.make_friend:input_type -> im.make_friend_req
	2,  // 3: im.relation.accept_make_friend:input_type -> im.accept_make_friend_req
	4,  // 4: im.relation.refuse_make_friend:input_type -> im.refuse_make_friend_req
	6,  // 5: im.relation.group_invite:input_type -> im.group_invite_req
	8,  // 6: im.relation.accept_group_invite:input_type -> im.accept_group_invite_req
	10, // 7: im.relation.refuse_group_invite:input_type -> im.refuse_group_invite_req
	12, // 8: im.relation.group_apply:input_type -> im.group_apply_req
	14, // 9: im.relation.accept_group_apply:input_type -> im.accept_group_apply_req
	16, // 10: im.relation.refuse_group_apply:input_type -> im.refuse_group_apply_req
	18, // 11: im.relation.del_friend:input_type -> im.del_friend_req
	20, // 12: im.relation.leave_group:input_type -> im.leave_group_req
	22, // 13: im.relation.kick_group:input_type -> im.kick_group_req
	25, // 14: im.relation.relations:input_type -> im.relations_req
	27, // 15: im.relation.group_members:input_type -> im.group_members_req
	29, // 16: im.relation.update_user_relation_name:input_type -> im.update_user_relation_name_req
	31, // 17: im.relation.update_name_in_group:input_type -> im.update_name_in_group_req
	33, // 18: im.relation.update_duty_in_group:input_type -> im.update_duty_in_group_req
	1,  // 19: im.relation.make_friend:output_type -> im.make_friend_resp
	3,  // 20: im.relation.accept_make_friend:output_type -> im.accept_make_friend_resp
	5,  // 21: im.relation.refuse_make_friend:output_type -> im.refuse_make_friend_resp
	7,  // 22: im.relation.group_invite:output_type -> im.group_invite_resp
	9,  // 23: im.relation.accept_group_invite:output_type -> im.accept_group_invite_resp
	11, // 24: im.relation.refuse_group_invite:output_type -> im.refuse_group_invite_resp
	13, // 25: im.relation.group_apply:output_type -> im.group_apply_resp
	15, // 26: im.relation.accept_group_apply:output_type -> im.accept_group_apply_resp
	17, // 27: im.relation.refuse_group_apply:output_type -> im.refuse_group_apply_resp
	19, // 28: im.relation.del_friend:output_type -> im.del_friend_resp
	21, // 29: im.relation.leave_group:output_type -> im.leave_group_resp
	23, // 30: im.relation.kick_group:output_type -> im.kick_group_resp
	26, // 31: im.relation.relations:output_type -> im.relations_resp
	28, // 32: im.relation.group_members:output_type -> im.group_members_resp
	30, // 33: im.relation.update_user_relation_name:output_type -> im.update_user_relation_name_resp
	32, // 34: im.relation.update_name_in_group:output_type -> im.update_name_in_group_resp
	34, // 35: im.relation.update_duty_in_group:output_type -> im.update_duty_in_group_resp
	19, // [19:36] is the sub-list for method output_type
	2,  // [2:19] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_im_relation_proto_init() }
func file_api_im_relation_proto_init() {
	if File_api_im_relation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_im_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMakeFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMakeFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseMakeFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseMakeFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptGroupInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptGroupInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseGroupInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseGroupInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptGroupApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptGroupApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseGroupApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseGroupApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMembersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMembersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRelationNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRelationNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameInGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameInGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDutyInGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_im_relation_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDutyInGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_im_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_im_relation_proto_goTypes,
		DependencyIndexes: file_api_im_relation_proto_depIdxs,
		MessageInfos:      file_api_im_relation_proto_msgTypes,
	}.Build()
	File_api_im_relation_proto = out.File
	file_api_im_relation_proto_rawDesc = nil
	file_api_im_relation_proto_goTypes = nil
	file_api_im_relation_proto_depIdxs = nil
}
