// Code generated by protoc-gen-go-pbex. DO NOT EDIT.
// version:
// 	protoc-gen-pbex v0.0.103
// 	protoc         v4.25.3
// source: api/im_relation.proto

package api

// return empty means pass
func (m *MakeFriendReq) Validate() (errstr string) {
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: make_friend_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *AcceptMakeFriendReq) Validate() (errstr string) {
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: accept_make_friend_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *RefuseMakeFriendReq) Validate() (errstr string) {
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: refuse_make_friend_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *GroupInviteReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: group_invite_req check value str len eq failed"
	}
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: group_invite_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *AcceptGroupInviteReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: accept_group_invite_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *RefuseGroupInviteReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: refuse_group_invite_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *GroupApplyReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: group_apply_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *AcceptGroupApplyReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: accept_group_apply_req check value str len eq failed"
	}
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: accept_group_apply_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *RefuseGroupApplyReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: refuse_group_apply_req check value str len eq failed"
	}
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: refuse_group_apply_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *DelFriendReq) Validate() (errstr string) {
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: del_friend_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *LeaveGroupReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: leave_group_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *KickGroupReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: kick_group_req check value str len eq failed"
	}
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: kick_group_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *RelationsReq) Validate() (errstr string) {
	if len(m.GetCurrentHash()) != 64 {
		return "field: current_hash in object: relations_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *GroupMembersReq) Validate() (errstr string) {
	if len(m.GetCurrentHash()) != 64 {
		return "field: current_hash in object: group_members_req check value str len eq failed"
	}
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: group_members_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *UpdateUserRelationNameReq) Validate() (errstr string) {
	if len(m.GetTarget()) != 24 {
		return "field: target in object: update_user_relation_name_req check value str len eq failed"
	}
	if m.GetTargetType() != "user" && m.GetTargetType() != "group" {
		return "field: target_type in object: update_user_relation_name_req check value str in failed"
	}
	if len(m.GetNewName()) <= 0 {
		return "field: new_name in object: update_user_relation_name_req check value str len gt failed"
	}
	return ""
}

// return empty means pass
func (m *UpdateNameInGroupReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: update_name_in_group_req check value str len eq failed"
	}
	if len(m.GetNewName()) <= 0 {
		return "field: new_name in object: update_name_in_group_req check value str len gt failed"
	}
	return ""
}

// return empty means pass
func (m *UpdateDutyInGroupReq) Validate() (errstr string) {
	if len(m.GetUserId()) != 24 {
		return "field: user_id in object: update_duty_in_group_req check value str len eq failed"
	}
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: update_duty_in_group_req check value str len eq failed"
	}
	if m.GetNewDuty() != 0 && m.GetNewDuty() != 3 {
		return "field: new_duty in object: update_duty_in_group_req check value uint in failed"
	}
	return ""
}

// return empty means pass
func (m *GetSelfRequestsReq) Validate() (errstr string) {
	if m.GetDirection() != "after" && m.GetDirection() != "before" {
		return "field: direction in object: get_self_requests_req check value str in failed"
	}
	return ""
}

// return empty means pass
func (m *GetGroupRequestsCountReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: get_group_requests_count_req check value str len eq failed"
	}
	return ""
}

// return empty means pass
func (m *GetGroupRequestsReq) Validate() (errstr string) {
	if len(m.GetGroupId()) != 24 {
		return "field: group_id in object: get_group_requests_req check value str len eq failed"
	}
	if m.GetDirection() != "after" && m.GetDirection() != "before" {
		return "field: direction in object: get_group_requests_req check value str in failed"
	}
	return ""
}
